// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/hebe.proto

package hebe;

public final class Hebe {
  private Hebe() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DataPartialOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1 [default = "null"];
    boolean hasName();
    String getName();
    
    // required string columns = 2 [default = "pvid,deliver_id"];
    boolean hasColumns();
    String getColumns();
    
    // optional string joint = 3 [default = "pvid,deliver_id"];
    boolean hasJoint();
    String getJoint();
    
    // optional string join_type = 4 [default = ""];
    boolean hasJoinType();
    String getJoinType();
    
    // optional string default_values = 5 [default = ""];
    boolean hasDefaultValues();
    String getDefaultValues();
  }
  public static final class DataPartial extends
      com.google.protobuf.GeneratedMessage
      implements DataPartialOrBuilder {
    // Use DataPartial.newBuilder() to construct.
    private DataPartial(Builder builder) {
      super(builder);
    }
    private DataPartial(boolean noInit) {}
    
    private static final DataPartial defaultInstance;
    public static DataPartial getDefaultInstance() {
      return defaultInstance;
    }
    
    public DataPartial getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hebe.Hebe.internal_static_hebe_DataPartial_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hebe.Hebe.internal_static_hebe_DataPartial_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1 [default = "null"];
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string columns = 2 [default = "pvid,deliver_id"];
    public static final int COLUMNS_FIELD_NUMBER = 2;
    private java.lang.Object columns_;
    public boolean hasColumns() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getColumns() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          columns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getColumnsBytes() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        columns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string joint = 3 [default = "pvid,deliver_id"];
    public static final int JOINT_FIELD_NUMBER = 3;
    private java.lang.Object joint_;
    public boolean hasJoint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getJoint() {
      java.lang.Object ref = joint_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          joint_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getJointBytes() {
      java.lang.Object ref = joint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        joint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string join_type = 4 [default = ""];
    public static final int JOIN_TYPE_FIELD_NUMBER = 4;
    private java.lang.Object joinType_;
    public boolean hasJoinType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getJoinType() {
      java.lang.Object ref = joinType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          joinType_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getJoinTypeBytes() {
      java.lang.Object ref = joinType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        joinType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string default_values = 5 [default = ""];
    public static final int DEFAULT_VALUES_FIELD_NUMBER = 5;
    private java.lang.Object defaultValues_;
    public boolean hasDefaultValues() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getDefaultValues() {
      java.lang.Object ref = defaultValues_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          defaultValues_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDefaultValuesBytes() {
      java.lang.Object ref = defaultValues_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        defaultValues_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "null";
      columns_ = "pvid,deliver_id";
      joint_ = "pvid,deliver_id";
      joinType_ = "";
      defaultValues_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColumns()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getJointBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getJoinTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getDefaultValuesBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getJointBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getJoinTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getDefaultValuesBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static hebe.Hebe.DataPartial parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.DataPartial parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.DataPartial parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.DataPartial parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.DataPartial parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.DataPartial parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.DataPartial parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.DataPartial parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.DataPartial parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.DataPartial parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hebe.Hebe.DataPartial prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hebe.Hebe.DataPartialOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hebe.Hebe.internal_static_hebe_DataPartial_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hebe.Hebe.internal_static_hebe_DataPartial_fieldAccessorTable;
      }
      
      // Construct using hebe.Hebe.DataPartial.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "null";
        bitField0_ = (bitField0_ & ~0x00000001);
        columns_ = "pvid,deliver_id";
        bitField0_ = (bitField0_ & ~0x00000002);
        joint_ = "pvid,deliver_id";
        bitField0_ = (bitField0_ & ~0x00000004);
        joinType_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        defaultValues_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hebe.Hebe.DataPartial.getDescriptor();
      }
      
      public hebe.Hebe.DataPartial getDefaultInstanceForType() {
        return hebe.Hebe.DataPartial.getDefaultInstance();
      }
      
      public hebe.Hebe.DataPartial build() {
        hebe.Hebe.DataPartial result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private hebe.Hebe.DataPartial buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        hebe.Hebe.DataPartial result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public hebe.Hebe.DataPartial buildPartial() {
        hebe.Hebe.DataPartial result = new hebe.Hebe.DataPartial(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.columns_ = columns_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.joint_ = joint_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.joinType_ = joinType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.defaultValues_ = defaultValues_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hebe.Hebe.DataPartial) {
          return mergeFrom((hebe.Hebe.DataPartial)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(hebe.Hebe.DataPartial other) {
        if (other == hebe.Hebe.DataPartial.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasColumns()) {
          setColumns(other.getColumns());
        }
        if (other.hasJoint()) {
          setJoint(other.getJoint());
        }
        if (other.hasJoinType()) {
          setJoinType(other.getJoinType());
        }
        if (other.hasDefaultValues()) {
          setDefaultValues(other.getDefaultValues());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasColumns()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              columns_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              joint_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              joinType_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              defaultValues_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1 [default = "null"];
      private java.lang.Object name_ = "null";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // required string columns = 2 [default = "pvid,deliver_id"];
      private java.lang.Object columns_ = "pvid,deliver_id";
      public boolean hasColumns() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getColumns() {
        java.lang.Object ref = columns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          columns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setColumns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        columns_ = value;
        onChanged();
        return this;
      }
      public Builder clearColumns() {
        bitField0_ = (bitField0_ & ~0x00000002);
        columns_ = getDefaultInstance().getColumns();
        onChanged();
        return this;
      }
      void setColumns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        columns_ = value;
        onChanged();
      }
      
      // optional string joint = 3 [default = "pvid,deliver_id"];
      private java.lang.Object joint_ = "pvid,deliver_id";
      public boolean hasJoint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getJoint() {
        java.lang.Object ref = joint_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          joint_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setJoint(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        joint_ = value;
        onChanged();
        return this;
      }
      public Builder clearJoint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        joint_ = getDefaultInstance().getJoint();
        onChanged();
        return this;
      }
      void setJoint(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        joint_ = value;
        onChanged();
      }
      
      // optional string join_type = 4 [default = ""];
      private java.lang.Object joinType_ = "";
      public boolean hasJoinType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getJoinType() {
        java.lang.Object ref = joinType_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          joinType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setJoinType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        joinType_ = value;
        onChanged();
        return this;
      }
      public Builder clearJoinType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        joinType_ = getDefaultInstance().getJoinType();
        onChanged();
        return this;
      }
      void setJoinType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        joinType_ = value;
        onChanged();
      }
      
      // optional string default_values = 5 [default = ""];
      private java.lang.Object defaultValues_ = "";
      public boolean hasDefaultValues() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getDefaultValues() {
        java.lang.Object ref = defaultValues_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          defaultValues_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDefaultValues(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        defaultValues_ = value;
        onChanged();
        return this;
      }
      public Builder clearDefaultValues() {
        bitField0_ = (bitField0_ & ~0x00000010);
        defaultValues_ = getDefaultInstance().getDefaultValues();
        onChanged();
        return this;
      }
      void setDefaultValues(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        defaultValues_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:hebe.DataPartial)
    }
    
    static {
      defaultInstance = new DataPartial(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:hebe.DataPartial)
  }
  
  public interface ShrinkOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1 [default = "null"];
    boolean hasName();
    String getName();
    
    // optional string args = 2;
    boolean hasArgs();
    String getArgs();
  }
  public static final class Shrink extends
      com.google.protobuf.GeneratedMessage
      implements ShrinkOrBuilder {
    // Use Shrink.newBuilder() to construct.
    private Shrink(Builder builder) {
      super(builder);
    }
    private Shrink(boolean noInit) {}
    
    private static final Shrink defaultInstance;
    public static Shrink getDefaultInstance() {
      return defaultInstance;
    }
    
    public Shrink getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hebe.Hebe.internal_static_hebe_Shrink_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hebe.Hebe.internal_static_hebe_Shrink_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1 [default = "null"];
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string args = 2;
    public static final int ARGS_FIELD_NUMBER = 2;
    private java.lang.Object args_;
    public boolean hasArgs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getArgs() {
      java.lang.Object ref = args_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          args_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getArgsBytes() {
      java.lang.Object ref = args_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        args_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "null";
      args_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getArgsBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getArgsBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static hebe.Hebe.Shrink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Shrink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Shrink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Shrink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Shrink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Shrink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Shrink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Shrink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Shrink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Shrink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hebe.Hebe.Shrink prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hebe.Hebe.ShrinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hebe.Hebe.internal_static_hebe_Shrink_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hebe.Hebe.internal_static_hebe_Shrink_fieldAccessorTable;
      }
      
      // Construct using hebe.Hebe.Shrink.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "null";
        bitField0_ = (bitField0_ & ~0x00000001);
        args_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hebe.Hebe.Shrink.getDescriptor();
      }
      
      public hebe.Hebe.Shrink getDefaultInstanceForType() {
        return hebe.Hebe.Shrink.getDefaultInstance();
      }
      
      public hebe.Hebe.Shrink build() {
        hebe.Hebe.Shrink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private hebe.Hebe.Shrink buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        hebe.Hebe.Shrink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public hebe.Hebe.Shrink buildPartial() {
        hebe.Hebe.Shrink result = new hebe.Hebe.Shrink(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.args_ = args_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hebe.Hebe.Shrink) {
          return mergeFrom((hebe.Hebe.Shrink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(hebe.Hebe.Shrink other) {
        if (other == hebe.Hebe.Shrink.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasArgs()) {
          setArgs(other.getArgs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              args_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1 [default = "null"];
      private java.lang.Object name_ = "null";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string args = 2;
      private java.lang.Object args_ = "";
      public boolean hasArgs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getArgs() {
        java.lang.Object ref = args_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          args_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setArgs(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        args_ = value;
        onChanged();
        return this;
      }
      public Builder clearArgs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        args_ = getDefaultInstance().getArgs();
        onChanged();
        return this;
      }
      void setArgs(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        args_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:hebe.Shrink)
    }
    
    static {
      defaultInstance = new Shrink(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:hebe.Shrink)
  }
  
  public interface NoiseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string columns = 1;
    boolean hasColumns();
    String getColumns();
    
    // required string to = 2;
    boolean hasTo();
    String getTo();
    
    // required string value = 3;
    boolean hasValue();
    String getValue();
    
    // required string factor = 4;
    boolean hasFactor();
    String getFactor();
  }
  public static final class Noise extends
      com.google.protobuf.GeneratedMessage
      implements NoiseOrBuilder {
    // Use Noise.newBuilder() to construct.
    private Noise(Builder builder) {
      super(builder);
    }
    private Noise(boolean noInit) {}
    
    private static final Noise defaultInstance;
    public static Noise getDefaultInstance() {
      return defaultInstance;
    }
    
    public Noise getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hebe.Hebe.internal_static_hebe_Noise_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hebe.Hebe.internal_static_hebe_Noise_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string columns = 1;
    public static final int COLUMNS_FIELD_NUMBER = 1;
    private java.lang.Object columns_;
    public boolean hasColumns() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getColumns() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          columns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getColumnsBytes() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        columns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string to = 2;
    public static final int TO_FIELD_NUMBER = 2;
    private java.lang.Object to_;
    public boolean hasTo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTo() {
      java.lang.Object ref = to_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          to_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getToBytes() {
      java.lang.Object ref = to_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        to_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private java.lang.Object value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          value_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string factor = 4;
    public static final int FACTOR_FIELD_NUMBER = 4;
    private java.lang.Object factor_;
    public boolean hasFactor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getFactor() {
      java.lang.Object ref = factor_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          factor_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFactorBytes() {
      java.lang.Object ref = factor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        factor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      columns_ = "";
      to_ = "";
      value_ = "";
      factor_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasColumns()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFactor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getToBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getValueBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFactorBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getToBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getValueBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFactorBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static hebe.Hebe.Noise parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Noise parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Noise parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Noise parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Noise parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Noise parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Noise parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Noise parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Noise parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Noise parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hebe.Hebe.Noise prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hebe.Hebe.NoiseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hebe.Hebe.internal_static_hebe_Noise_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hebe.Hebe.internal_static_hebe_Noise_fieldAccessorTable;
      }
      
      // Construct using hebe.Hebe.Noise.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        columns_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        to_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        factor_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hebe.Hebe.Noise.getDescriptor();
      }
      
      public hebe.Hebe.Noise getDefaultInstanceForType() {
        return hebe.Hebe.Noise.getDefaultInstance();
      }
      
      public hebe.Hebe.Noise build() {
        hebe.Hebe.Noise result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private hebe.Hebe.Noise buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        hebe.Hebe.Noise result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public hebe.Hebe.Noise buildPartial() {
        hebe.Hebe.Noise result = new hebe.Hebe.Noise(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.columns_ = columns_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.to_ = to_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.factor_ = factor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hebe.Hebe.Noise) {
          return mergeFrom((hebe.Hebe.Noise)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(hebe.Hebe.Noise other) {
        if (other == hebe.Hebe.Noise.getDefaultInstance()) return this;
        if (other.hasColumns()) {
          setColumns(other.getColumns());
        }
        if (other.hasTo()) {
          setTo(other.getTo());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasFactor()) {
          setFactor(other.getFactor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasColumns()) {
          
          return false;
        }
        if (!hasTo()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        if (!hasFactor()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              columns_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              to_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              value_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              factor_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string columns = 1;
      private java.lang.Object columns_ = "";
      public boolean hasColumns() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getColumns() {
        java.lang.Object ref = columns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          columns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setColumns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        columns_ = value;
        onChanged();
        return this;
      }
      public Builder clearColumns() {
        bitField0_ = (bitField0_ & ~0x00000001);
        columns_ = getDefaultInstance().getColumns();
        onChanged();
        return this;
      }
      void setColumns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        columns_ = value;
        onChanged();
      }
      
      // required string to = 2;
      private java.lang.Object to_ = "";
      public boolean hasTo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTo() {
        java.lang.Object ref = to_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          to_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTo(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        to_ = value;
        onChanged();
        return this;
      }
      public Builder clearTo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }
      void setTo(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        to_ = value;
        onChanged();
      }
      
      // required string value = 3;
      private java.lang.Object value_ = "";
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setValue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      void setValue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
      }
      
      // required string factor = 4;
      private java.lang.Object factor_ = "";
      public boolean hasFactor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getFactor() {
        java.lang.Object ref = factor_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          factor_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFactor(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        factor_ = value;
        onChanged();
        return this;
      }
      public Builder clearFactor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        factor_ = getDefaultInstance().getFactor();
        onChanged();
        return this;
      }
      void setFactor(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        factor_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:hebe.Noise)
    }
    
    static {
      defaultInstance = new Noise(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:hebe.Noise)
  }
  
  public interface TransformOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string type = 1 [default = "null"];
    boolean hasType();
    String getType();
    
    // optional string args = 2;
    boolean hasArgs();
    String getArgs();
    
    // required string columns = 3;
    boolean hasColumns();
    String getColumns();
    
    // required string to = 4;
    boolean hasTo();
    String getTo();
    
    // optional string label = 5 [default = "click"];
    boolean hasLabel();
    String getLabel();
  }
  public static final class Transform extends
      com.google.protobuf.GeneratedMessage
      implements TransformOrBuilder {
    // Use Transform.newBuilder() to construct.
    private Transform(Builder builder) {
      super(builder);
    }
    private Transform(boolean noInit) {}
    
    private static final Transform defaultInstance;
    public static Transform getDefaultInstance() {
      return defaultInstance;
    }
    
    public Transform getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hebe.Hebe.internal_static_hebe_Transform_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hebe.Hebe.internal_static_hebe_Transform_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string type = 1 [default = "null"];
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string args = 2;
    public static final int ARGS_FIELD_NUMBER = 2;
    private java.lang.Object args_;
    public boolean hasArgs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getArgs() {
      java.lang.Object ref = args_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          args_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getArgsBytes() {
      java.lang.Object ref = args_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        args_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string columns = 3;
    public static final int COLUMNS_FIELD_NUMBER = 3;
    private java.lang.Object columns_;
    public boolean hasColumns() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getColumns() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          columns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getColumnsBytes() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        columns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string to = 4;
    public static final int TO_FIELD_NUMBER = 4;
    private java.lang.Object to_;
    public boolean hasTo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getTo() {
      java.lang.Object ref = to_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          to_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getToBytes() {
      java.lang.Object ref = to_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        to_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string label = 5 [default = "click"];
    public static final int LABEL_FIELD_NUMBER = 5;
    private java.lang.Object label_;
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          label_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      type_ = "null";
      args_ = "";
      columns_ = "";
      to_ = "";
      label_ = "click";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColumns()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getArgsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getToBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getLabelBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getArgsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getToBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getLabelBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static hebe.Hebe.Transform parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Transform parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Transform parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Transform parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Transform parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Transform parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Transform parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Transform parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Transform parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Transform parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hebe.Hebe.Transform prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hebe.Hebe.TransformOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hebe.Hebe.internal_static_hebe_Transform_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hebe.Hebe.internal_static_hebe_Transform_fieldAccessorTable;
      }
      
      // Construct using hebe.Hebe.Transform.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = "null";
        bitField0_ = (bitField0_ & ~0x00000001);
        args_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        columns_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        to_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        label_ = "click";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hebe.Hebe.Transform.getDescriptor();
      }
      
      public hebe.Hebe.Transform getDefaultInstanceForType() {
        return hebe.Hebe.Transform.getDefaultInstance();
      }
      
      public hebe.Hebe.Transform build() {
        hebe.Hebe.Transform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private hebe.Hebe.Transform buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        hebe.Hebe.Transform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public hebe.Hebe.Transform buildPartial() {
        hebe.Hebe.Transform result = new hebe.Hebe.Transform(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.args_ = args_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.columns_ = columns_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.to_ = to_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.label_ = label_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hebe.Hebe.Transform) {
          return mergeFrom((hebe.Hebe.Transform)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(hebe.Hebe.Transform other) {
        if (other == hebe.Hebe.Transform.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasArgs()) {
          setArgs(other.getArgs());
        }
        if (other.hasColumns()) {
          setColumns(other.getColumns());
        }
        if (other.hasTo()) {
          setTo(other.getTo());
        }
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasColumns()) {
          
          return false;
        }
        if (!hasTo()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              type_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              args_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              columns_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              to_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              label_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string type = 1 [default = "null"];
      private java.lang.Object type_ = "null";
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
      }
      
      // optional string args = 2;
      private java.lang.Object args_ = "";
      public boolean hasArgs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getArgs() {
        java.lang.Object ref = args_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          args_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setArgs(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        args_ = value;
        onChanged();
        return this;
      }
      public Builder clearArgs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        args_ = getDefaultInstance().getArgs();
        onChanged();
        return this;
      }
      void setArgs(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        args_ = value;
        onChanged();
      }
      
      // required string columns = 3;
      private java.lang.Object columns_ = "";
      public boolean hasColumns() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getColumns() {
        java.lang.Object ref = columns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          columns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setColumns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        columns_ = value;
        onChanged();
        return this;
      }
      public Builder clearColumns() {
        bitField0_ = (bitField0_ & ~0x00000004);
        columns_ = getDefaultInstance().getColumns();
        onChanged();
        return this;
      }
      void setColumns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        columns_ = value;
        onChanged();
      }
      
      // required string to = 4;
      private java.lang.Object to_ = "";
      public boolean hasTo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getTo() {
        java.lang.Object ref = to_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          to_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTo(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        to_ = value;
        onChanged();
        return this;
      }
      public Builder clearTo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }
      void setTo(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        to_ = value;
        onChanged();
      }
      
      // optional string label = 5 [default = "click"];
      private java.lang.Object label_ = "click";
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLabel(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        label_ = value;
        onChanged();
        return this;
      }
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      void setLabel(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        label_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:hebe.Transform)
    }
    
    static {
      defaultInstance = new Transform(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:hebe.Transform)
  }
  
  public interface IntersectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string columns = 1;
    boolean hasColumns();
    String getColumns();
    
    // optional string fix_bundle = 2;
    boolean hasFixBundle();
    String getFixBundle();
    
    // optional int32 factor = 3 [default = 2];
    boolean hasFactor();
    int getFactor();
    
    // optional string mapfile = 4 [default = ""];
    boolean hasMapfile();
    String getMapfile();
    
    // optional string label = 5 [default = "click"];
    boolean hasLabel();
    String getLabel();
  }
  public static final class Intersect extends
      com.google.protobuf.GeneratedMessage
      implements IntersectOrBuilder {
    // Use Intersect.newBuilder() to construct.
    private Intersect(Builder builder) {
      super(builder);
    }
    private Intersect(boolean noInit) {}
    
    private static final Intersect defaultInstance;
    public static Intersect getDefaultInstance() {
      return defaultInstance;
    }
    
    public Intersect getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hebe.Hebe.internal_static_hebe_Intersect_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hebe.Hebe.internal_static_hebe_Intersect_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string columns = 1;
    public static final int COLUMNS_FIELD_NUMBER = 1;
    private java.lang.Object columns_;
    public boolean hasColumns() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getColumns() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          columns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getColumnsBytes() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        columns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string fix_bundle = 2;
    public static final int FIX_BUNDLE_FIELD_NUMBER = 2;
    private java.lang.Object fixBundle_;
    public boolean hasFixBundle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getFixBundle() {
      java.lang.Object ref = fixBundle_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          fixBundle_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFixBundleBytes() {
      java.lang.Object ref = fixBundle_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        fixBundle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 factor = 3 [default = 2];
    public static final int FACTOR_FIELD_NUMBER = 3;
    private int factor_;
    public boolean hasFactor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getFactor() {
      return factor_;
    }
    
    // optional string mapfile = 4 [default = ""];
    public static final int MAPFILE_FIELD_NUMBER = 4;
    private java.lang.Object mapfile_;
    public boolean hasMapfile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getMapfile() {
      java.lang.Object ref = mapfile_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mapfile_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMapfileBytes() {
      java.lang.Object ref = mapfile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mapfile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string label = 5 [default = "click"];
    public static final int LABEL_FIELD_NUMBER = 5;
    private java.lang.Object label_;
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          label_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      columns_ = "";
      fixBundle_ = "";
      factor_ = 2;
      mapfile_ = "";
      label_ = "click";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasColumns()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFixBundleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, factor_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getMapfileBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getLabelBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFixBundleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, factor_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getMapfileBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getLabelBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static hebe.Hebe.Intersect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Intersect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Intersect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Intersect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Intersect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Intersect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Intersect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Intersect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Intersect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Intersect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hebe.Hebe.Intersect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hebe.Hebe.IntersectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hebe.Hebe.internal_static_hebe_Intersect_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hebe.Hebe.internal_static_hebe_Intersect_fieldAccessorTable;
      }
      
      // Construct using hebe.Hebe.Intersect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        columns_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        fixBundle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        factor_ = 2;
        bitField0_ = (bitField0_ & ~0x00000004);
        mapfile_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        label_ = "click";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hebe.Hebe.Intersect.getDescriptor();
      }
      
      public hebe.Hebe.Intersect getDefaultInstanceForType() {
        return hebe.Hebe.Intersect.getDefaultInstance();
      }
      
      public hebe.Hebe.Intersect build() {
        hebe.Hebe.Intersect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private hebe.Hebe.Intersect buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        hebe.Hebe.Intersect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public hebe.Hebe.Intersect buildPartial() {
        hebe.Hebe.Intersect result = new hebe.Hebe.Intersect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.columns_ = columns_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fixBundle_ = fixBundle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.factor_ = factor_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mapfile_ = mapfile_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.label_ = label_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hebe.Hebe.Intersect) {
          return mergeFrom((hebe.Hebe.Intersect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(hebe.Hebe.Intersect other) {
        if (other == hebe.Hebe.Intersect.getDefaultInstance()) return this;
        if (other.hasColumns()) {
          setColumns(other.getColumns());
        }
        if (other.hasFixBundle()) {
          setFixBundle(other.getFixBundle());
        }
        if (other.hasFactor()) {
          setFactor(other.getFactor());
        }
        if (other.hasMapfile()) {
          setMapfile(other.getMapfile());
        }
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasColumns()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              columns_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              fixBundle_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              factor_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              mapfile_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              label_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string columns = 1;
      private java.lang.Object columns_ = "";
      public boolean hasColumns() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getColumns() {
        java.lang.Object ref = columns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          columns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setColumns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        columns_ = value;
        onChanged();
        return this;
      }
      public Builder clearColumns() {
        bitField0_ = (bitField0_ & ~0x00000001);
        columns_ = getDefaultInstance().getColumns();
        onChanged();
        return this;
      }
      void setColumns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        columns_ = value;
        onChanged();
      }
      
      // optional string fix_bundle = 2;
      private java.lang.Object fixBundle_ = "";
      public boolean hasFixBundle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getFixBundle() {
        java.lang.Object ref = fixBundle_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          fixBundle_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFixBundle(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fixBundle_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixBundle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fixBundle_ = getDefaultInstance().getFixBundle();
        onChanged();
        return this;
      }
      void setFixBundle(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        fixBundle_ = value;
        onChanged();
      }
      
      // optional int32 factor = 3 [default = 2];
      private int factor_ = 2;
      public boolean hasFactor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getFactor() {
        return factor_;
      }
      public Builder setFactor(int value) {
        bitField0_ |= 0x00000004;
        factor_ = value;
        onChanged();
        return this;
      }
      public Builder clearFactor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        factor_ = 2;
        onChanged();
        return this;
      }
      
      // optional string mapfile = 4 [default = ""];
      private java.lang.Object mapfile_ = "";
      public boolean hasMapfile() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getMapfile() {
        java.lang.Object ref = mapfile_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mapfile_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMapfile(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mapfile_ = value;
        onChanged();
        return this;
      }
      public Builder clearMapfile() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mapfile_ = getDefaultInstance().getMapfile();
        onChanged();
        return this;
      }
      void setMapfile(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        mapfile_ = value;
        onChanged();
      }
      
      // optional string label = 5 [default = "click"];
      private java.lang.Object label_ = "click";
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLabel(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        label_ = value;
        onChanged();
        return this;
      }
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      void setLabel(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        label_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:hebe.Intersect)
    }
    
    static {
      defaultInstance = new Intersect(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:hebe.Intersect)
  }
  
  public interface FormatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1 [default = "vw"];
    boolean hasName();
    String getName();
    
    // required string pattern = 2;
    boolean hasPattern();
    String getPattern();
    
    // required string columns = 3;
    boolean hasColumns();
    String getColumns();
    
    // optional int32 numreduces = 4 [default = 200];
    boolean hasNumreduces();
    int getNumreduces();
    
    // optional int32 validate_rate = 5 [default = 0];
    boolean hasValidateRate();
    int getValidateRate();
    
    // optional string random_column = 6;
    boolean hasRandomColumn();
    String getRandomColumn();
    
    // optional string random_ratio = 7;
    boolean hasRandomRatio();
    String getRandomRatio();
  }
  public static final class Format extends
      com.google.protobuf.GeneratedMessage
      implements FormatOrBuilder {
    // Use Format.newBuilder() to construct.
    private Format(Builder builder) {
      super(builder);
    }
    private Format(boolean noInit) {}
    
    private static final Format defaultInstance;
    public static Format getDefaultInstance() {
      return defaultInstance;
    }
    
    public Format getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hebe.Hebe.internal_static_hebe_Format_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hebe.Hebe.internal_static_hebe_Format_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1 [default = "vw"];
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string pattern = 2;
    public static final int PATTERN_FIELD_NUMBER = 2;
    private java.lang.Object pattern_;
    public boolean hasPattern() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getPattern() {
      java.lang.Object ref = pattern_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          pattern_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPatternBytes() {
      java.lang.Object ref = pattern_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        pattern_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string columns = 3;
    public static final int COLUMNS_FIELD_NUMBER = 3;
    private java.lang.Object columns_;
    public boolean hasColumns() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getColumns() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          columns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getColumnsBytes() {
      java.lang.Object ref = columns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        columns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 numreduces = 4 [default = 200];
    public static final int NUMREDUCES_FIELD_NUMBER = 4;
    private int numreduces_;
    public boolean hasNumreduces() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getNumreduces() {
      return numreduces_;
    }
    
    // optional int32 validate_rate = 5 [default = 0];
    public static final int VALIDATE_RATE_FIELD_NUMBER = 5;
    private int validateRate_;
    public boolean hasValidateRate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getValidateRate() {
      return validateRate_;
    }
    
    // optional string random_column = 6;
    public static final int RANDOM_COLUMN_FIELD_NUMBER = 6;
    private java.lang.Object randomColumn_;
    public boolean hasRandomColumn() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getRandomColumn() {
      java.lang.Object ref = randomColumn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          randomColumn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRandomColumnBytes() {
      java.lang.Object ref = randomColumn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        randomColumn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string random_ratio = 7;
    public static final int RANDOM_RATIO_FIELD_NUMBER = 7;
    private java.lang.Object randomRatio_;
    public boolean hasRandomRatio() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getRandomRatio() {
      java.lang.Object ref = randomRatio_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          randomRatio_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRandomRatioBytes() {
      java.lang.Object ref = randomRatio_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        randomRatio_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "vw";
      pattern_ = "";
      columns_ = "";
      numreduces_ = 200;
      validateRate_ = 0;
      randomColumn_ = "";
      randomRatio_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPattern()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColumns()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPatternBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, numreduces_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, validateRate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getRandomColumnBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getRandomRatioBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPatternBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getColumnsBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, numreduces_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, validateRate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getRandomColumnBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getRandomRatioBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static hebe.Hebe.Format parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Format parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Format parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Format parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Format parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Format parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Format parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Format parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Format parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Format parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hebe.Hebe.Format prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hebe.Hebe.FormatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hebe.Hebe.internal_static_hebe_Format_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hebe.Hebe.internal_static_hebe_Format_fieldAccessorTable;
      }
      
      // Construct using hebe.Hebe.Format.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "vw";
        bitField0_ = (bitField0_ & ~0x00000001);
        pattern_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        columns_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        numreduces_ = 200;
        bitField0_ = (bitField0_ & ~0x00000008);
        validateRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        randomColumn_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        randomRatio_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hebe.Hebe.Format.getDescriptor();
      }
      
      public hebe.Hebe.Format getDefaultInstanceForType() {
        return hebe.Hebe.Format.getDefaultInstance();
      }
      
      public hebe.Hebe.Format build() {
        hebe.Hebe.Format result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private hebe.Hebe.Format buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        hebe.Hebe.Format result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public hebe.Hebe.Format buildPartial() {
        hebe.Hebe.Format result = new hebe.Hebe.Format(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pattern_ = pattern_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.columns_ = columns_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.numreduces_ = numreduces_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.validateRate_ = validateRate_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.randomColumn_ = randomColumn_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.randomRatio_ = randomRatio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hebe.Hebe.Format) {
          return mergeFrom((hebe.Hebe.Format)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(hebe.Hebe.Format other) {
        if (other == hebe.Hebe.Format.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasPattern()) {
          setPattern(other.getPattern());
        }
        if (other.hasColumns()) {
          setColumns(other.getColumns());
        }
        if (other.hasNumreduces()) {
          setNumreduces(other.getNumreduces());
        }
        if (other.hasValidateRate()) {
          setValidateRate(other.getValidateRate());
        }
        if (other.hasRandomColumn()) {
          setRandomColumn(other.getRandomColumn());
        }
        if (other.hasRandomRatio()) {
          setRandomRatio(other.getRandomRatio());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasPattern()) {
          
          return false;
        }
        if (!hasColumns()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              pattern_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              columns_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              numreduces_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              validateRate_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              randomColumn_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              randomRatio_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1 [default = "vw"];
      private java.lang.Object name_ = "vw";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // required string pattern = 2;
      private java.lang.Object pattern_ = "";
      public boolean hasPattern() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getPattern() {
        java.lang.Object ref = pattern_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          pattern_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPattern(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pattern_ = value;
        onChanged();
        return this;
      }
      public Builder clearPattern() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pattern_ = getDefaultInstance().getPattern();
        onChanged();
        return this;
      }
      void setPattern(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        pattern_ = value;
        onChanged();
      }
      
      // required string columns = 3;
      private java.lang.Object columns_ = "";
      public boolean hasColumns() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getColumns() {
        java.lang.Object ref = columns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          columns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setColumns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        columns_ = value;
        onChanged();
        return this;
      }
      public Builder clearColumns() {
        bitField0_ = (bitField0_ & ~0x00000004);
        columns_ = getDefaultInstance().getColumns();
        onChanged();
        return this;
      }
      void setColumns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        columns_ = value;
        onChanged();
      }
      
      // optional int32 numreduces = 4 [default = 200];
      private int numreduces_ = 200;
      public boolean hasNumreduces() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getNumreduces() {
        return numreduces_;
      }
      public Builder setNumreduces(int value) {
        bitField0_ |= 0x00000008;
        numreduces_ = value;
        onChanged();
        return this;
      }
      public Builder clearNumreduces() {
        bitField0_ = (bitField0_ & ~0x00000008);
        numreduces_ = 200;
        onChanged();
        return this;
      }
      
      // optional int32 validate_rate = 5 [default = 0];
      private int validateRate_ ;
      public boolean hasValidateRate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getValidateRate() {
        return validateRate_;
      }
      public Builder setValidateRate(int value) {
        bitField0_ |= 0x00000010;
        validateRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearValidateRate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        validateRate_ = 0;
        onChanged();
        return this;
      }
      
      // optional string random_column = 6;
      private java.lang.Object randomColumn_ = "";
      public boolean hasRandomColumn() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getRandomColumn() {
        java.lang.Object ref = randomColumn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          randomColumn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRandomColumn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        randomColumn_ = value;
        onChanged();
        return this;
      }
      public Builder clearRandomColumn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        randomColumn_ = getDefaultInstance().getRandomColumn();
        onChanged();
        return this;
      }
      void setRandomColumn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        randomColumn_ = value;
        onChanged();
      }
      
      // optional string random_ratio = 7;
      private java.lang.Object randomRatio_ = "";
      public boolean hasRandomRatio() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getRandomRatio() {
        java.lang.Object ref = randomRatio_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          randomRatio_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRandomRatio(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        randomRatio_ = value;
        onChanged();
        return this;
      }
      public Builder clearRandomRatio() {
        bitField0_ = (bitField0_ & ~0x00000040);
        randomRatio_ = getDefaultInstance().getRandomRatio();
        onChanged();
        return this;
      }
      void setRandomRatio(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        randomRatio_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:hebe.Format)
    }
    
    static {
      defaultInstance = new Format(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:hebe.Format)
  }
  
  public interface FilterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1 [default = "null"];
    boolean hasName();
    String getName();
    
    // optional string args = 2;
    boolean hasArgs();
    String getArgs();
    
    // required string inputs = 3;
    boolean hasInputs();
    String getInputs();
    
    // required string outputs = 4;
    boolean hasOutputs();
    String getOutputs();
    
    // optional int32 output_num = 5;
    boolean hasOutputNum();
    int getOutputNum();
    
    // optional int32 offset = 6;
    boolean hasOffset();
    int getOffset();
  }
  public static final class Filter extends
      com.google.protobuf.GeneratedMessage
      implements FilterOrBuilder {
    // Use Filter.newBuilder() to construct.
    private Filter(Builder builder) {
      super(builder);
    }
    private Filter(boolean noInit) {}
    
    private static final Filter defaultInstance;
    public static Filter getDefaultInstance() {
      return defaultInstance;
    }
    
    public Filter getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hebe.Hebe.internal_static_hebe_Filter_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hebe.Hebe.internal_static_hebe_Filter_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1 [default = "null"];
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string args = 2;
    public static final int ARGS_FIELD_NUMBER = 2;
    private java.lang.Object args_;
    public boolean hasArgs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getArgs() {
      java.lang.Object ref = args_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          args_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getArgsBytes() {
      java.lang.Object ref = args_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        args_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string inputs = 3;
    public static final int INPUTS_FIELD_NUMBER = 3;
    private java.lang.Object inputs_;
    public boolean hasInputs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getInputs() {
      java.lang.Object ref = inputs_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          inputs_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInputsBytes() {
      java.lang.Object ref = inputs_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        inputs_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string outputs = 4;
    public static final int OUTPUTS_FIELD_NUMBER = 4;
    private java.lang.Object outputs_;
    public boolean hasOutputs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getOutputs() {
      java.lang.Object ref = outputs_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          outputs_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOutputsBytes() {
      java.lang.Object ref = outputs_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        outputs_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 output_num = 5;
    public static final int OUTPUT_NUM_FIELD_NUMBER = 5;
    private int outputNum_;
    public boolean hasOutputNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getOutputNum() {
      return outputNum_;
    }
    
    // optional int32 offset = 6;
    public static final int OFFSET_FIELD_NUMBER = 6;
    private int offset_;
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getOffset() {
      return offset_;
    }
    
    private void initFields() {
      name_ = "null";
      args_ = "";
      inputs_ = "";
      outputs_ = "";
      outputNum_ = 0;
      offset_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInputs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOutputs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getArgsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getInputsBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getOutputsBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, outputNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, offset_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getArgsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getInputsBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getOutputsBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, outputNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, offset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static hebe.Hebe.Filter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Filter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Filter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Filter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Filter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Filter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Filter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Filter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Filter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Filter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hebe.Hebe.Filter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hebe.Hebe.FilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hebe.Hebe.internal_static_hebe_Filter_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hebe.Hebe.internal_static_hebe_Filter_fieldAccessorTable;
      }
      
      // Construct using hebe.Hebe.Filter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "null";
        bitField0_ = (bitField0_ & ~0x00000001);
        args_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        inputs_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        outputs_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        outputNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        offset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hebe.Hebe.Filter.getDescriptor();
      }
      
      public hebe.Hebe.Filter getDefaultInstanceForType() {
        return hebe.Hebe.Filter.getDefaultInstance();
      }
      
      public hebe.Hebe.Filter build() {
        hebe.Hebe.Filter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private hebe.Hebe.Filter buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        hebe.Hebe.Filter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public hebe.Hebe.Filter buildPartial() {
        hebe.Hebe.Filter result = new hebe.Hebe.Filter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.args_ = args_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inputs_ = inputs_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.outputs_ = outputs_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.outputNum_ = outputNum_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.offset_ = offset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hebe.Hebe.Filter) {
          return mergeFrom((hebe.Hebe.Filter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(hebe.Hebe.Filter other) {
        if (other == hebe.Hebe.Filter.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasArgs()) {
          setArgs(other.getArgs());
        }
        if (other.hasInputs()) {
          setInputs(other.getInputs());
        }
        if (other.hasOutputs()) {
          setOutputs(other.getOutputs());
        }
        if (other.hasOutputNum()) {
          setOutputNum(other.getOutputNum());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasInputs()) {
          
          return false;
        }
        if (!hasOutputs()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              args_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              inputs_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              outputs_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              outputNum_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              offset_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1 [default = "null"];
      private java.lang.Object name_ = "null";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string args = 2;
      private java.lang.Object args_ = "";
      public boolean hasArgs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getArgs() {
        java.lang.Object ref = args_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          args_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setArgs(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        args_ = value;
        onChanged();
        return this;
      }
      public Builder clearArgs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        args_ = getDefaultInstance().getArgs();
        onChanged();
        return this;
      }
      void setArgs(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        args_ = value;
        onChanged();
      }
      
      // required string inputs = 3;
      private java.lang.Object inputs_ = "";
      public boolean hasInputs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getInputs() {
        java.lang.Object ref = inputs_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          inputs_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInputs(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        inputs_ = value;
        onChanged();
        return this;
      }
      public Builder clearInputs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        inputs_ = getDefaultInstance().getInputs();
        onChanged();
        return this;
      }
      void setInputs(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        inputs_ = value;
        onChanged();
      }
      
      // required string outputs = 4;
      private java.lang.Object outputs_ = "";
      public boolean hasOutputs() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getOutputs() {
        java.lang.Object ref = outputs_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          outputs_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOutputs(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        outputs_ = value;
        onChanged();
        return this;
      }
      public Builder clearOutputs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        outputs_ = getDefaultInstance().getOutputs();
        onChanged();
        return this;
      }
      void setOutputs(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        outputs_ = value;
        onChanged();
      }
      
      // optional int32 output_num = 5;
      private int outputNum_ ;
      public boolean hasOutputNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getOutputNum() {
        return outputNum_;
      }
      public Builder setOutputNum(int value) {
        bitField0_ |= 0x00000010;
        outputNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearOutputNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        outputNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 offset = 6;
      private int offset_ ;
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getOffset() {
        return offset_;
      }
      public Builder setOffset(int value) {
        bitField0_ |= 0x00000020;
        offset_ = value;
        onChanged();
        return this;
      }
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000020);
        offset_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:hebe.Filter)
    }
    
    static {
      defaultInstance = new Filter(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:hebe.Filter)
  }
  
  public interface SettingsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // required string whole_data = 2;
    boolean hasWholeData();
    String getWholeData();
    
    // repeated .hebe.DataPartial partial = 3;
    java.util.List<hebe.Hebe.DataPartial> 
        getPartialList();
    hebe.Hebe.DataPartial getPartial(int index);
    int getPartialCount();
    java.util.List<? extends hebe.Hebe.DataPartialOrBuilder> 
        getPartialOrBuilderList();
    hebe.Hebe.DataPartialOrBuilder getPartialOrBuilder(
        int index);
    
    // repeated .hebe.Shrink shrink = 4;
    java.util.List<hebe.Hebe.Shrink> 
        getShrinkList();
    hebe.Hebe.Shrink getShrink(int index);
    int getShrinkCount();
    java.util.List<? extends hebe.Hebe.ShrinkOrBuilder> 
        getShrinkOrBuilderList();
    hebe.Hebe.ShrinkOrBuilder getShrinkOrBuilder(
        int index);
    
    // repeated .hebe.Noise noise = 5;
    java.util.List<hebe.Hebe.Noise> 
        getNoiseList();
    hebe.Hebe.Noise getNoise(int index);
    int getNoiseCount();
    java.util.List<? extends hebe.Hebe.NoiseOrBuilder> 
        getNoiseOrBuilderList();
    hebe.Hebe.NoiseOrBuilder getNoiseOrBuilder(
        int index);
    
    // repeated .hebe.Transform transform = 6;
    java.util.List<hebe.Hebe.Transform> 
        getTransformList();
    hebe.Hebe.Transform getTransform(int index);
    int getTransformCount();
    java.util.List<? extends hebe.Hebe.TransformOrBuilder> 
        getTransformOrBuilderList();
    hebe.Hebe.TransformOrBuilder getTransformOrBuilder(
        int index);
    
    // repeated .hebe.Filter filter = 7;
    java.util.List<hebe.Hebe.Filter> 
        getFilterList();
    hebe.Hebe.Filter getFilter(int index);
    int getFilterCount();
    java.util.List<? extends hebe.Hebe.FilterOrBuilder> 
        getFilterOrBuilderList();
    hebe.Hebe.FilterOrBuilder getFilterOrBuilder(
        int index);
    
    // repeated .hebe.Format format = 8;
    java.util.List<hebe.Hebe.Format> 
        getFormatList();
    hebe.Hebe.Format getFormat(int index);
    int getFormatCount();
    java.util.List<? extends hebe.Hebe.FormatOrBuilder> 
        getFormatOrBuilderList();
    hebe.Hebe.FormatOrBuilder getFormatOrBuilder(
        int index);
  }
  public static final class Settings extends
      com.google.protobuf.GeneratedMessage
      implements SettingsOrBuilder {
    // Use Settings.newBuilder() to construct.
    private Settings(Builder builder) {
      super(builder);
    }
    private Settings(boolean noInit) {}
    
    private static final Settings defaultInstance;
    public static Settings getDefaultInstance() {
      return defaultInstance;
    }
    
    public Settings getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hebe.Hebe.internal_static_hebe_Settings_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hebe.Hebe.internal_static_hebe_Settings_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string whole_data = 2;
    public static final int WHOLE_DATA_FIELD_NUMBER = 2;
    private java.lang.Object wholeData_;
    public boolean hasWholeData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getWholeData() {
      java.lang.Object ref = wholeData_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wholeData_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWholeDataBytes() {
      java.lang.Object ref = wholeData_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wholeData_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .hebe.DataPartial partial = 3;
    public static final int PARTIAL_FIELD_NUMBER = 3;
    private java.util.List<hebe.Hebe.DataPartial> partial_;
    public java.util.List<hebe.Hebe.DataPartial> getPartialList() {
      return partial_;
    }
    public java.util.List<? extends hebe.Hebe.DataPartialOrBuilder> 
        getPartialOrBuilderList() {
      return partial_;
    }
    public int getPartialCount() {
      return partial_.size();
    }
    public hebe.Hebe.DataPartial getPartial(int index) {
      return partial_.get(index);
    }
    public hebe.Hebe.DataPartialOrBuilder getPartialOrBuilder(
        int index) {
      return partial_.get(index);
    }
    
    // repeated .hebe.Shrink shrink = 4;
    public static final int SHRINK_FIELD_NUMBER = 4;
    private java.util.List<hebe.Hebe.Shrink> shrink_;
    public java.util.List<hebe.Hebe.Shrink> getShrinkList() {
      return shrink_;
    }
    public java.util.List<? extends hebe.Hebe.ShrinkOrBuilder> 
        getShrinkOrBuilderList() {
      return shrink_;
    }
    public int getShrinkCount() {
      return shrink_.size();
    }
    public hebe.Hebe.Shrink getShrink(int index) {
      return shrink_.get(index);
    }
    public hebe.Hebe.ShrinkOrBuilder getShrinkOrBuilder(
        int index) {
      return shrink_.get(index);
    }
    
    // repeated .hebe.Noise noise = 5;
    public static final int NOISE_FIELD_NUMBER = 5;
    private java.util.List<hebe.Hebe.Noise> noise_;
    public java.util.List<hebe.Hebe.Noise> getNoiseList() {
      return noise_;
    }
    public java.util.List<? extends hebe.Hebe.NoiseOrBuilder> 
        getNoiseOrBuilderList() {
      return noise_;
    }
    public int getNoiseCount() {
      return noise_.size();
    }
    public hebe.Hebe.Noise getNoise(int index) {
      return noise_.get(index);
    }
    public hebe.Hebe.NoiseOrBuilder getNoiseOrBuilder(
        int index) {
      return noise_.get(index);
    }
    
    // repeated .hebe.Transform transform = 6;
    public static final int TRANSFORM_FIELD_NUMBER = 6;
    private java.util.List<hebe.Hebe.Transform> transform_;
    public java.util.List<hebe.Hebe.Transform> getTransformList() {
      return transform_;
    }
    public java.util.List<? extends hebe.Hebe.TransformOrBuilder> 
        getTransformOrBuilderList() {
      return transform_;
    }
    public int getTransformCount() {
      return transform_.size();
    }
    public hebe.Hebe.Transform getTransform(int index) {
      return transform_.get(index);
    }
    public hebe.Hebe.TransformOrBuilder getTransformOrBuilder(
        int index) {
      return transform_.get(index);
    }
    
    // repeated .hebe.Filter filter = 7;
    public static final int FILTER_FIELD_NUMBER = 7;
    private java.util.List<hebe.Hebe.Filter> filter_;
    public java.util.List<hebe.Hebe.Filter> getFilterList() {
      return filter_;
    }
    public java.util.List<? extends hebe.Hebe.FilterOrBuilder> 
        getFilterOrBuilderList() {
      return filter_;
    }
    public int getFilterCount() {
      return filter_.size();
    }
    public hebe.Hebe.Filter getFilter(int index) {
      return filter_.get(index);
    }
    public hebe.Hebe.FilterOrBuilder getFilterOrBuilder(
        int index) {
      return filter_.get(index);
    }
    
    // repeated .hebe.Format format = 8;
    public static final int FORMAT_FIELD_NUMBER = 8;
    private java.util.List<hebe.Hebe.Format> format_;
    public java.util.List<hebe.Hebe.Format> getFormatList() {
      return format_;
    }
    public java.util.List<? extends hebe.Hebe.FormatOrBuilder> 
        getFormatOrBuilderList() {
      return format_;
    }
    public int getFormatCount() {
      return format_.size();
    }
    public hebe.Hebe.Format getFormat(int index) {
      return format_.get(index);
    }
    public hebe.Hebe.FormatOrBuilder getFormatOrBuilder(
        int index) {
      return format_.get(index);
    }
    
    private void initFields() {
      name_ = "";
      wholeData_ = "";
      partial_ = java.util.Collections.emptyList();
      shrink_ = java.util.Collections.emptyList();
      noise_ = java.util.Collections.emptyList();
      transform_ = java.util.Collections.emptyList();
      filter_ = java.util.Collections.emptyList();
      format_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWholeData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPartialCount(); i++) {
        if (!getPartial(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getShrinkCount(); i++) {
        if (!getShrink(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getNoiseCount(); i++) {
        if (!getNoise(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTransformCount(); i++) {
        if (!getTransform(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFilterCount(); i++) {
        if (!getFilter(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFormatCount(); i++) {
        if (!getFormat(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getWholeDataBytes());
      }
      for (int i = 0; i < partial_.size(); i++) {
        output.writeMessage(3, partial_.get(i));
      }
      for (int i = 0; i < shrink_.size(); i++) {
        output.writeMessage(4, shrink_.get(i));
      }
      for (int i = 0; i < noise_.size(); i++) {
        output.writeMessage(5, noise_.get(i));
      }
      for (int i = 0; i < transform_.size(); i++) {
        output.writeMessage(6, transform_.get(i));
      }
      for (int i = 0; i < filter_.size(); i++) {
        output.writeMessage(7, filter_.get(i));
      }
      for (int i = 0; i < format_.size(); i++) {
        output.writeMessage(8, format_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getWholeDataBytes());
      }
      for (int i = 0; i < partial_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, partial_.get(i));
      }
      for (int i = 0; i < shrink_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, shrink_.get(i));
      }
      for (int i = 0; i < noise_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, noise_.get(i));
      }
      for (int i = 0; i < transform_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, transform_.get(i));
      }
      for (int i = 0; i < filter_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, filter_.get(i));
      }
      for (int i = 0; i < format_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, format_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static hebe.Hebe.Settings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Settings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Settings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static hebe.Hebe.Settings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Settings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Settings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static hebe.Hebe.Settings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Settings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static hebe.Hebe.Settings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static hebe.Hebe.Settings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hebe.Hebe.Settings prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hebe.Hebe.SettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hebe.Hebe.internal_static_hebe_Settings_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hebe.Hebe.internal_static_hebe_Settings_fieldAccessorTable;
      }
      
      // Construct using hebe.Hebe.Settings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPartialFieldBuilder();
          getShrinkFieldBuilder();
          getNoiseFieldBuilder();
          getTransformFieldBuilder();
          getFilterFieldBuilder();
          getFormatFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        wholeData_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (partialBuilder_ == null) {
          partial_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          partialBuilder_.clear();
        }
        if (shrinkBuilder_ == null) {
          shrink_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          shrinkBuilder_.clear();
        }
        if (noiseBuilder_ == null) {
          noise_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          noiseBuilder_.clear();
        }
        if (transformBuilder_ == null) {
          transform_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          transformBuilder_.clear();
        }
        if (filterBuilder_ == null) {
          filter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          filterBuilder_.clear();
        }
        if (formatBuilder_ == null) {
          format_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          formatBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hebe.Hebe.Settings.getDescriptor();
      }
      
      public hebe.Hebe.Settings getDefaultInstanceForType() {
        return hebe.Hebe.Settings.getDefaultInstance();
      }
      
      public hebe.Hebe.Settings build() {
        hebe.Hebe.Settings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private hebe.Hebe.Settings buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        hebe.Hebe.Settings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public hebe.Hebe.Settings buildPartial() {
        hebe.Hebe.Settings result = new hebe.Hebe.Settings(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wholeData_ = wholeData_;
        if (partialBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            partial_ = java.util.Collections.unmodifiableList(partial_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.partial_ = partial_;
        } else {
          result.partial_ = partialBuilder_.build();
        }
        if (shrinkBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            shrink_ = java.util.Collections.unmodifiableList(shrink_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.shrink_ = shrink_;
        } else {
          result.shrink_ = shrinkBuilder_.build();
        }
        if (noiseBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            noise_ = java.util.Collections.unmodifiableList(noise_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.noise_ = noise_;
        } else {
          result.noise_ = noiseBuilder_.build();
        }
        if (transformBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            transform_ = java.util.Collections.unmodifiableList(transform_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.transform_ = transform_;
        } else {
          result.transform_ = transformBuilder_.build();
        }
        if (filterBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            filter_ = java.util.Collections.unmodifiableList(filter_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.filter_ = filter_;
        } else {
          result.filter_ = filterBuilder_.build();
        }
        if (formatBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            format_ = java.util.Collections.unmodifiableList(format_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.format_ = format_;
        } else {
          result.format_ = formatBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hebe.Hebe.Settings) {
          return mergeFrom((hebe.Hebe.Settings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(hebe.Hebe.Settings other) {
        if (other == hebe.Hebe.Settings.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasWholeData()) {
          setWholeData(other.getWholeData());
        }
        if (partialBuilder_ == null) {
          if (!other.partial_.isEmpty()) {
            if (partial_.isEmpty()) {
              partial_ = other.partial_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePartialIsMutable();
              partial_.addAll(other.partial_);
            }
            onChanged();
          }
        } else {
          if (!other.partial_.isEmpty()) {
            if (partialBuilder_.isEmpty()) {
              partialBuilder_.dispose();
              partialBuilder_ = null;
              partial_ = other.partial_;
              bitField0_ = (bitField0_ & ~0x00000004);
              partialBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPartialFieldBuilder() : null;
            } else {
              partialBuilder_.addAllMessages(other.partial_);
            }
          }
        }
        if (shrinkBuilder_ == null) {
          if (!other.shrink_.isEmpty()) {
            if (shrink_.isEmpty()) {
              shrink_ = other.shrink_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureShrinkIsMutable();
              shrink_.addAll(other.shrink_);
            }
            onChanged();
          }
        } else {
          if (!other.shrink_.isEmpty()) {
            if (shrinkBuilder_.isEmpty()) {
              shrinkBuilder_.dispose();
              shrinkBuilder_ = null;
              shrink_ = other.shrink_;
              bitField0_ = (bitField0_ & ~0x00000008);
              shrinkBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getShrinkFieldBuilder() : null;
            } else {
              shrinkBuilder_.addAllMessages(other.shrink_);
            }
          }
        }
        if (noiseBuilder_ == null) {
          if (!other.noise_.isEmpty()) {
            if (noise_.isEmpty()) {
              noise_ = other.noise_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureNoiseIsMutable();
              noise_.addAll(other.noise_);
            }
            onChanged();
          }
        } else {
          if (!other.noise_.isEmpty()) {
            if (noiseBuilder_.isEmpty()) {
              noiseBuilder_.dispose();
              noiseBuilder_ = null;
              noise_ = other.noise_;
              bitField0_ = (bitField0_ & ~0x00000010);
              noiseBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNoiseFieldBuilder() : null;
            } else {
              noiseBuilder_.addAllMessages(other.noise_);
            }
          }
        }
        if (transformBuilder_ == null) {
          if (!other.transform_.isEmpty()) {
            if (transform_.isEmpty()) {
              transform_ = other.transform_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureTransformIsMutable();
              transform_.addAll(other.transform_);
            }
            onChanged();
          }
        } else {
          if (!other.transform_.isEmpty()) {
            if (transformBuilder_.isEmpty()) {
              transformBuilder_.dispose();
              transformBuilder_ = null;
              transform_ = other.transform_;
              bitField0_ = (bitField0_ & ~0x00000020);
              transformBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTransformFieldBuilder() : null;
            } else {
              transformBuilder_.addAllMessages(other.transform_);
            }
          }
        }
        if (filterBuilder_ == null) {
          if (!other.filter_.isEmpty()) {
            if (filter_.isEmpty()) {
              filter_ = other.filter_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFilterIsMutable();
              filter_.addAll(other.filter_);
            }
            onChanged();
          }
        } else {
          if (!other.filter_.isEmpty()) {
            if (filterBuilder_.isEmpty()) {
              filterBuilder_.dispose();
              filterBuilder_ = null;
              filter_ = other.filter_;
              bitField0_ = (bitField0_ & ~0x00000040);
              filterBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFilterFieldBuilder() : null;
            } else {
              filterBuilder_.addAllMessages(other.filter_);
            }
          }
        }
        if (formatBuilder_ == null) {
          if (!other.format_.isEmpty()) {
            if (format_.isEmpty()) {
              format_ = other.format_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureFormatIsMutable();
              format_.addAll(other.format_);
            }
            onChanged();
          }
        } else {
          if (!other.format_.isEmpty()) {
            if (formatBuilder_.isEmpty()) {
              formatBuilder_.dispose();
              formatBuilder_ = null;
              format_ = other.format_;
              bitField0_ = (bitField0_ & ~0x00000080);
              formatBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFormatFieldBuilder() : null;
            } else {
              formatBuilder_.addAllMessages(other.format_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasWholeData()) {
          
          return false;
        }
        for (int i = 0; i < getPartialCount(); i++) {
          if (!getPartial(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getShrinkCount(); i++) {
          if (!getShrink(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getNoiseCount(); i++) {
          if (!getNoise(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTransformCount(); i++) {
          if (!getTransform(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getFilterCount(); i++) {
          if (!getFilter(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getFormatCount(); i++) {
          if (!getFormat(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              wholeData_ = input.readBytes();
              break;
            }
            case 26: {
              hebe.Hebe.DataPartial.Builder subBuilder = hebe.Hebe.DataPartial.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPartial(subBuilder.buildPartial());
              break;
            }
            case 34: {
              hebe.Hebe.Shrink.Builder subBuilder = hebe.Hebe.Shrink.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addShrink(subBuilder.buildPartial());
              break;
            }
            case 42: {
              hebe.Hebe.Noise.Builder subBuilder = hebe.Hebe.Noise.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addNoise(subBuilder.buildPartial());
              break;
            }
            case 50: {
              hebe.Hebe.Transform.Builder subBuilder = hebe.Hebe.Transform.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTransform(subBuilder.buildPartial());
              break;
            }
            case 58: {
              hebe.Hebe.Filter.Builder subBuilder = hebe.Hebe.Filter.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFilter(subBuilder.buildPartial());
              break;
            }
            case 66: {
              hebe.Hebe.Format.Builder subBuilder = hebe.Hebe.Format.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFormat(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // required string whole_data = 2;
      private java.lang.Object wholeData_ = "";
      public boolean hasWholeData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getWholeData() {
        java.lang.Object ref = wholeData_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wholeData_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWholeData(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        wholeData_ = value;
        onChanged();
        return this;
      }
      public Builder clearWholeData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        wholeData_ = getDefaultInstance().getWholeData();
        onChanged();
        return this;
      }
      void setWholeData(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        wholeData_ = value;
        onChanged();
      }
      
      // repeated .hebe.DataPartial partial = 3;
      private java.util.List<hebe.Hebe.DataPartial> partial_ =
        java.util.Collections.emptyList();
      private void ensurePartialIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          partial_ = new java.util.ArrayList<hebe.Hebe.DataPartial>(partial_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.DataPartial, hebe.Hebe.DataPartial.Builder, hebe.Hebe.DataPartialOrBuilder> partialBuilder_;
      
      public java.util.List<hebe.Hebe.DataPartial> getPartialList() {
        if (partialBuilder_ == null) {
          return java.util.Collections.unmodifiableList(partial_);
        } else {
          return partialBuilder_.getMessageList();
        }
      }
      public int getPartialCount() {
        if (partialBuilder_ == null) {
          return partial_.size();
        } else {
          return partialBuilder_.getCount();
        }
      }
      public hebe.Hebe.DataPartial getPartial(int index) {
        if (partialBuilder_ == null) {
          return partial_.get(index);
        } else {
          return partialBuilder_.getMessage(index);
        }
      }
      public Builder setPartial(
          int index, hebe.Hebe.DataPartial value) {
        if (partialBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePartialIsMutable();
          partial_.set(index, value);
          onChanged();
        } else {
          partialBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPartial(
          int index, hebe.Hebe.DataPartial.Builder builderForValue) {
        if (partialBuilder_ == null) {
          ensurePartialIsMutable();
          partial_.set(index, builderForValue.build());
          onChanged();
        } else {
          partialBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPartial(hebe.Hebe.DataPartial value) {
        if (partialBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePartialIsMutable();
          partial_.add(value);
          onChanged();
        } else {
          partialBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPartial(
          int index, hebe.Hebe.DataPartial value) {
        if (partialBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePartialIsMutable();
          partial_.add(index, value);
          onChanged();
        } else {
          partialBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPartial(
          hebe.Hebe.DataPartial.Builder builderForValue) {
        if (partialBuilder_ == null) {
          ensurePartialIsMutable();
          partial_.add(builderForValue.build());
          onChanged();
        } else {
          partialBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPartial(
          int index, hebe.Hebe.DataPartial.Builder builderForValue) {
        if (partialBuilder_ == null) {
          ensurePartialIsMutable();
          partial_.add(index, builderForValue.build());
          onChanged();
        } else {
          partialBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPartial(
          java.lang.Iterable<? extends hebe.Hebe.DataPartial> values) {
        if (partialBuilder_ == null) {
          ensurePartialIsMutable();
          super.addAll(values, partial_);
          onChanged();
        } else {
          partialBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPartial() {
        if (partialBuilder_ == null) {
          partial_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          partialBuilder_.clear();
        }
        return this;
      }
      public Builder removePartial(int index) {
        if (partialBuilder_ == null) {
          ensurePartialIsMutable();
          partial_.remove(index);
          onChanged();
        } else {
          partialBuilder_.remove(index);
        }
        return this;
      }
      public hebe.Hebe.DataPartial.Builder getPartialBuilder(
          int index) {
        return getPartialFieldBuilder().getBuilder(index);
      }
      public hebe.Hebe.DataPartialOrBuilder getPartialOrBuilder(
          int index) {
        if (partialBuilder_ == null) {
          return partial_.get(index);  } else {
          return partialBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends hebe.Hebe.DataPartialOrBuilder> 
           getPartialOrBuilderList() {
        if (partialBuilder_ != null) {
          return partialBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(partial_);
        }
      }
      public hebe.Hebe.DataPartial.Builder addPartialBuilder() {
        return getPartialFieldBuilder().addBuilder(
            hebe.Hebe.DataPartial.getDefaultInstance());
      }
      public hebe.Hebe.DataPartial.Builder addPartialBuilder(
          int index) {
        return getPartialFieldBuilder().addBuilder(
            index, hebe.Hebe.DataPartial.getDefaultInstance());
      }
      public java.util.List<hebe.Hebe.DataPartial.Builder> 
           getPartialBuilderList() {
        return getPartialFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.DataPartial, hebe.Hebe.DataPartial.Builder, hebe.Hebe.DataPartialOrBuilder> 
          getPartialFieldBuilder() {
        if (partialBuilder_ == null) {
          partialBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hebe.Hebe.DataPartial, hebe.Hebe.DataPartial.Builder, hebe.Hebe.DataPartialOrBuilder>(
                  partial_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          partial_ = null;
        }
        return partialBuilder_;
      }
      
      // repeated .hebe.Shrink shrink = 4;
      private java.util.List<hebe.Hebe.Shrink> shrink_ =
        java.util.Collections.emptyList();
      private void ensureShrinkIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          shrink_ = new java.util.ArrayList<hebe.Hebe.Shrink>(shrink_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Shrink, hebe.Hebe.Shrink.Builder, hebe.Hebe.ShrinkOrBuilder> shrinkBuilder_;
      
      public java.util.List<hebe.Hebe.Shrink> getShrinkList() {
        if (shrinkBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shrink_);
        } else {
          return shrinkBuilder_.getMessageList();
        }
      }
      public int getShrinkCount() {
        if (shrinkBuilder_ == null) {
          return shrink_.size();
        } else {
          return shrinkBuilder_.getCount();
        }
      }
      public hebe.Hebe.Shrink getShrink(int index) {
        if (shrinkBuilder_ == null) {
          return shrink_.get(index);
        } else {
          return shrinkBuilder_.getMessage(index);
        }
      }
      public Builder setShrink(
          int index, hebe.Hebe.Shrink value) {
        if (shrinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShrinkIsMutable();
          shrink_.set(index, value);
          onChanged();
        } else {
          shrinkBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setShrink(
          int index, hebe.Hebe.Shrink.Builder builderForValue) {
        if (shrinkBuilder_ == null) {
          ensureShrinkIsMutable();
          shrink_.set(index, builderForValue.build());
          onChanged();
        } else {
          shrinkBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addShrink(hebe.Hebe.Shrink value) {
        if (shrinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShrinkIsMutable();
          shrink_.add(value);
          onChanged();
        } else {
          shrinkBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addShrink(
          int index, hebe.Hebe.Shrink value) {
        if (shrinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShrinkIsMutable();
          shrink_.add(index, value);
          onChanged();
        } else {
          shrinkBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addShrink(
          hebe.Hebe.Shrink.Builder builderForValue) {
        if (shrinkBuilder_ == null) {
          ensureShrinkIsMutable();
          shrink_.add(builderForValue.build());
          onChanged();
        } else {
          shrinkBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addShrink(
          int index, hebe.Hebe.Shrink.Builder builderForValue) {
        if (shrinkBuilder_ == null) {
          ensureShrinkIsMutable();
          shrink_.add(index, builderForValue.build());
          onChanged();
        } else {
          shrinkBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllShrink(
          java.lang.Iterable<? extends hebe.Hebe.Shrink> values) {
        if (shrinkBuilder_ == null) {
          ensureShrinkIsMutable();
          super.addAll(values, shrink_);
          onChanged();
        } else {
          shrinkBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearShrink() {
        if (shrinkBuilder_ == null) {
          shrink_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          shrinkBuilder_.clear();
        }
        return this;
      }
      public Builder removeShrink(int index) {
        if (shrinkBuilder_ == null) {
          ensureShrinkIsMutable();
          shrink_.remove(index);
          onChanged();
        } else {
          shrinkBuilder_.remove(index);
        }
        return this;
      }
      public hebe.Hebe.Shrink.Builder getShrinkBuilder(
          int index) {
        return getShrinkFieldBuilder().getBuilder(index);
      }
      public hebe.Hebe.ShrinkOrBuilder getShrinkOrBuilder(
          int index) {
        if (shrinkBuilder_ == null) {
          return shrink_.get(index);  } else {
          return shrinkBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends hebe.Hebe.ShrinkOrBuilder> 
           getShrinkOrBuilderList() {
        if (shrinkBuilder_ != null) {
          return shrinkBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shrink_);
        }
      }
      public hebe.Hebe.Shrink.Builder addShrinkBuilder() {
        return getShrinkFieldBuilder().addBuilder(
            hebe.Hebe.Shrink.getDefaultInstance());
      }
      public hebe.Hebe.Shrink.Builder addShrinkBuilder(
          int index) {
        return getShrinkFieldBuilder().addBuilder(
            index, hebe.Hebe.Shrink.getDefaultInstance());
      }
      public java.util.List<hebe.Hebe.Shrink.Builder> 
           getShrinkBuilderList() {
        return getShrinkFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Shrink, hebe.Hebe.Shrink.Builder, hebe.Hebe.ShrinkOrBuilder> 
          getShrinkFieldBuilder() {
        if (shrinkBuilder_ == null) {
          shrinkBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hebe.Hebe.Shrink, hebe.Hebe.Shrink.Builder, hebe.Hebe.ShrinkOrBuilder>(
                  shrink_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          shrink_ = null;
        }
        return shrinkBuilder_;
      }
      
      // repeated .hebe.Noise noise = 5;
      private java.util.List<hebe.Hebe.Noise> noise_ =
        java.util.Collections.emptyList();
      private void ensureNoiseIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          noise_ = new java.util.ArrayList<hebe.Hebe.Noise>(noise_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Noise, hebe.Hebe.Noise.Builder, hebe.Hebe.NoiseOrBuilder> noiseBuilder_;
      
      public java.util.List<hebe.Hebe.Noise> getNoiseList() {
        if (noiseBuilder_ == null) {
          return java.util.Collections.unmodifiableList(noise_);
        } else {
          return noiseBuilder_.getMessageList();
        }
      }
      public int getNoiseCount() {
        if (noiseBuilder_ == null) {
          return noise_.size();
        } else {
          return noiseBuilder_.getCount();
        }
      }
      public hebe.Hebe.Noise getNoise(int index) {
        if (noiseBuilder_ == null) {
          return noise_.get(index);
        } else {
          return noiseBuilder_.getMessage(index);
        }
      }
      public Builder setNoise(
          int index, hebe.Hebe.Noise value) {
        if (noiseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNoiseIsMutable();
          noise_.set(index, value);
          onChanged();
        } else {
          noiseBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setNoise(
          int index, hebe.Hebe.Noise.Builder builderForValue) {
        if (noiseBuilder_ == null) {
          ensureNoiseIsMutable();
          noise_.set(index, builderForValue.build());
          onChanged();
        } else {
          noiseBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addNoise(hebe.Hebe.Noise value) {
        if (noiseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNoiseIsMutable();
          noise_.add(value);
          onChanged();
        } else {
          noiseBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addNoise(
          int index, hebe.Hebe.Noise value) {
        if (noiseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNoiseIsMutable();
          noise_.add(index, value);
          onChanged();
        } else {
          noiseBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addNoise(
          hebe.Hebe.Noise.Builder builderForValue) {
        if (noiseBuilder_ == null) {
          ensureNoiseIsMutable();
          noise_.add(builderForValue.build());
          onChanged();
        } else {
          noiseBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addNoise(
          int index, hebe.Hebe.Noise.Builder builderForValue) {
        if (noiseBuilder_ == null) {
          ensureNoiseIsMutable();
          noise_.add(index, builderForValue.build());
          onChanged();
        } else {
          noiseBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllNoise(
          java.lang.Iterable<? extends hebe.Hebe.Noise> values) {
        if (noiseBuilder_ == null) {
          ensureNoiseIsMutable();
          super.addAll(values, noise_);
          onChanged();
        } else {
          noiseBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearNoise() {
        if (noiseBuilder_ == null) {
          noise_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          noiseBuilder_.clear();
        }
        return this;
      }
      public Builder removeNoise(int index) {
        if (noiseBuilder_ == null) {
          ensureNoiseIsMutable();
          noise_.remove(index);
          onChanged();
        } else {
          noiseBuilder_.remove(index);
        }
        return this;
      }
      public hebe.Hebe.Noise.Builder getNoiseBuilder(
          int index) {
        return getNoiseFieldBuilder().getBuilder(index);
      }
      public hebe.Hebe.NoiseOrBuilder getNoiseOrBuilder(
          int index) {
        if (noiseBuilder_ == null) {
          return noise_.get(index);  } else {
          return noiseBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends hebe.Hebe.NoiseOrBuilder> 
           getNoiseOrBuilderList() {
        if (noiseBuilder_ != null) {
          return noiseBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(noise_);
        }
      }
      public hebe.Hebe.Noise.Builder addNoiseBuilder() {
        return getNoiseFieldBuilder().addBuilder(
            hebe.Hebe.Noise.getDefaultInstance());
      }
      public hebe.Hebe.Noise.Builder addNoiseBuilder(
          int index) {
        return getNoiseFieldBuilder().addBuilder(
            index, hebe.Hebe.Noise.getDefaultInstance());
      }
      public java.util.List<hebe.Hebe.Noise.Builder> 
           getNoiseBuilderList() {
        return getNoiseFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Noise, hebe.Hebe.Noise.Builder, hebe.Hebe.NoiseOrBuilder> 
          getNoiseFieldBuilder() {
        if (noiseBuilder_ == null) {
          noiseBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hebe.Hebe.Noise, hebe.Hebe.Noise.Builder, hebe.Hebe.NoiseOrBuilder>(
                  noise_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          noise_ = null;
        }
        return noiseBuilder_;
      }
      
      // repeated .hebe.Transform transform = 6;
      private java.util.List<hebe.Hebe.Transform> transform_ =
        java.util.Collections.emptyList();
      private void ensureTransformIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          transform_ = new java.util.ArrayList<hebe.Hebe.Transform>(transform_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Transform, hebe.Hebe.Transform.Builder, hebe.Hebe.TransformOrBuilder> transformBuilder_;
      
      public java.util.List<hebe.Hebe.Transform> getTransformList() {
        if (transformBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transform_);
        } else {
          return transformBuilder_.getMessageList();
        }
      }
      public int getTransformCount() {
        if (transformBuilder_ == null) {
          return transform_.size();
        } else {
          return transformBuilder_.getCount();
        }
      }
      public hebe.Hebe.Transform getTransform(int index) {
        if (transformBuilder_ == null) {
          return transform_.get(index);
        } else {
          return transformBuilder_.getMessage(index);
        }
      }
      public Builder setTransform(
          int index, hebe.Hebe.Transform value) {
        if (transformBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformIsMutable();
          transform_.set(index, value);
          onChanged();
        } else {
          transformBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTransform(
          int index, hebe.Hebe.Transform.Builder builderForValue) {
        if (transformBuilder_ == null) {
          ensureTransformIsMutable();
          transform_.set(index, builderForValue.build());
          onChanged();
        } else {
          transformBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTransform(hebe.Hebe.Transform value) {
        if (transformBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformIsMutable();
          transform_.add(value);
          onChanged();
        } else {
          transformBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTransform(
          int index, hebe.Hebe.Transform value) {
        if (transformBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformIsMutable();
          transform_.add(index, value);
          onChanged();
        } else {
          transformBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTransform(
          hebe.Hebe.Transform.Builder builderForValue) {
        if (transformBuilder_ == null) {
          ensureTransformIsMutable();
          transform_.add(builderForValue.build());
          onChanged();
        } else {
          transformBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTransform(
          int index, hebe.Hebe.Transform.Builder builderForValue) {
        if (transformBuilder_ == null) {
          ensureTransformIsMutable();
          transform_.add(index, builderForValue.build());
          onChanged();
        } else {
          transformBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTransform(
          java.lang.Iterable<? extends hebe.Hebe.Transform> values) {
        if (transformBuilder_ == null) {
          ensureTransformIsMutable();
          super.addAll(values, transform_);
          onChanged();
        } else {
          transformBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTransform() {
        if (transformBuilder_ == null) {
          transform_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          transformBuilder_.clear();
        }
        return this;
      }
      public Builder removeTransform(int index) {
        if (transformBuilder_ == null) {
          ensureTransformIsMutable();
          transform_.remove(index);
          onChanged();
        } else {
          transformBuilder_.remove(index);
        }
        return this;
      }
      public hebe.Hebe.Transform.Builder getTransformBuilder(
          int index) {
        return getTransformFieldBuilder().getBuilder(index);
      }
      public hebe.Hebe.TransformOrBuilder getTransformOrBuilder(
          int index) {
        if (transformBuilder_ == null) {
          return transform_.get(index);  } else {
          return transformBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends hebe.Hebe.TransformOrBuilder> 
           getTransformOrBuilderList() {
        if (transformBuilder_ != null) {
          return transformBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transform_);
        }
      }
      public hebe.Hebe.Transform.Builder addTransformBuilder() {
        return getTransformFieldBuilder().addBuilder(
            hebe.Hebe.Transform.getDefaultInstance());
      }
      public hebe.Hebe.Transform.Builder addTransformBuilder(
          int index) {
        return getTransformFieldBuilder().addBuilder(
            index, hebe.Hebe.Transform.getDefaultInstance());
      }
      public java.util.List<hebe.Hebe.Transform.Builder> 
           getTransformBuilderList() {
        return getTransformFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Transform, hebe.Hebe.Transform.Builder, hebe.Hebe.TransformOrBuilder> 
          getTransformFieldBuilder() {
        if (transformBuilder_ == null) {
          transformBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hebe.Hebe.Transform, hebe.Hebe.Transform.Builder, hebe.Hebe.TransformOrBuilder>(
                  transform_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          transform_ = null;
        }
        return transformBuilder_;
      }
      
      // repeated .hebe.Filter filter = 7;
      private java.util.List<hebe.Hebe.Filter> filter_ =
        java.util.Collections.emptyList();
      private void ensureFilterIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          filter_ = new java.util.ArrayList<hebe.Hebe.Filter>(filter_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Filter, hebe.Hebe.Filter.Builder, hebe.Hebe.FilterOrBuilder> filterBuilder_;
      
      public java.util.List<hebe.Hebe.Filter> getFilterList() {
        if (filterBuilder_ == null) {
          return java.util.Collections.unmodifiableList(filter_);
        } else {
          return filterBuilder_.getMessageList();
        }
      }
      public int getFilterCount() {
        if (filterBuilder_ == null) {
          return filter_.size();
        } else {
          return filterBuilder_.getCount();
        }
      }
      public hebe.Hebe.Filter getFilter(int index) {
        if (filterBuilder_ == null) {
          return filter_.get(index);
        } else {
          return filterBuilder_.getMessage(index);
        }
      }
      public Builder setFilter(
          int index, hebe.Hebe.Filter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilterIsMutable();
          filter_.set(index, value);
          onChanged();
        } else {
          filterBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFilter(
          int index, hebe.Hebe.Filter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          ensureFilterIsMutable();
          filter_.set(index, builderForValue.build());
          onChanged();
        } else {
          filterBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFilter(hebe.Hebe.Filter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilterIsMutable();
          filter_.add(value);
          onChanged();
        } else {
          filterBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFilter(
          int index, hebe.Hebe.Filter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilterIsMutable();
          filter_.add(index, value);
          onChanged();
        } else {
          filterBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFilter(
          hebe.Hebe.Filter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          ensureFilterIsMutable();
          filter_.add(builderForValue.build());
          onChanged();
        } else {
          filterBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFilter(
          int index, hebe.Hebe.Filter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          ensureFilterIsMutable();
          filter_.add(index, builderForValue.build());
          onChanged();
        } else {
          filterBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFilter(
          java.lang.Iterable<? extends hebe.Hebe.Filter> values) {
        if (filterBuilder_ == null) {
          ensureFilterIsMutable();
          super.addAll(values, filter_);
          onChanged();
        } else {
          filterBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          filter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          filterBuilder_.clear();
        }
        return this;
      }
      public Builder removeFilter(int index) {
        if (filterBuilder_ == null) {
          ensureFilterIsMutable();
          filter_.remove(index);
          onChanged();
        } else {
          filterBuilder_.remove(index);
        }
        return this;
      }
      public hebe.Hebe.Filter.Builder getFilterBuilder(
          int index) {
        return getFilterFieldBuilder().getBuilder(index);
      }
      public hebe.Hebe.FilterOrBuilder getFilterOrBuilder(
          int index) {
        if (filterBuilder_ == null) {
          return filter_.get(index);  } else {
          return filterBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends hebe.Hebe.FilterOrBuilder> 
           getFilterOrBuilderList() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(filter_);
        }
      }
      public hebe.Hebe.Filter.Builder addFilterBuilder() {
        return getFilterFieldBuilder().addBuilder(
            hebe.Hebe.Filter.getDefaultInstance());
      }
      public hebe.Hebe.Filter.Builder addFilterBuilder(
          int index) {
        return getFilterFieldBuilder().addBuilder(
            index, hebe.Hebe.Filter.getDefaultInstance());
      }
      public java.util.List<hebe.Hebe.Filter.Builder> 
           getFilterBuilderList() {
        return getFilterFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Filter, hebe.Hebe.Filter.Builder, hebe.Hebe.FilterOrBuilder> 
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hebe.Hebe.Filter, hebe.Hebe.Filter.Builder, hebe.Hebe.FilterOrBuilder>(
                  filter_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }
      
      // repeated .hebe.Format format = 8;
      private java.util.List<hebe.Hebe.Format> format_ =
        java.util.Collections.emptyList();
      private void ensureFormatIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          format_ = new java.util.ArrayList<hebe.Hebe.Format>(format_);
          bitField0_ |= 0x00000080;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Format, hebe.Hebe.Format.Builder, hebe.Hebe.FormatOrBuilder> formatBuilder_;
      
      public java.util.List<hebe.Hebe.Format> getFormatList() {
        if (formatBuilder_ == null) {
          return java.util.Collections.unmodifiableList(format_);
        } else {
          return formatBuilder_.getMessageList();
        }
      }
      public int getFormatCount() {
        if (formatBuilder_ == null) {
          return format_.size();
        } else {
          return formatBuilder_.getCount();
        }
      }
      public hebe.Hebe.Format getFormat(int index) {
        if (formatBuilder_ == null) {
          return format_.get(index);
        } else {
          return formatBuilder_.getMessage(index);
        }
      }
      public Builder setFormat(
          int index, hebe.Hebe.Format value) {
        if (formatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormatIsMutable();
          format_.set(index, value);
          onChanged();
        } else {
          formatBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFormat(
          int index, hebe.Hebe.Format.Builder builderForValue) {
        if (formatBuilder_ == null) {
          ensureFormatIsMutable();
          format_.set(index, builderForValue.build());
          onChanged();
        } else {
          formatBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFormat(hebe.Hebe.Format value) {
        if (formatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormatIsMutable();
          format_.add(value);
          onChanged();
        } else {
          formatBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFormat(
          int index, hebe.Hebe.Format value) {
        if (formatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormatIsMutable();
          format_.add(index, value);
          onChanged();
        } else {
          formatBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFormat(
          hebe.Hebe.Format.Builder builderForValue) {
        if (formatBuilder_ == null) {
          ensureFormatIsMutable();
          format_.add(builderForValue.build());
          onChanged();
        } else {
          formatBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFormat(
          int index, hebe.Hebe.Format.Builder builderForValue) {
        if (formatBuilder_ == null) {
          ensureFormatIsMutable();
          format_.add(index, builderForValue.build());
          onChanged();
        } else {
          formatBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFormat(
          java.lang.Iterable<? extends hebe.Hebe.Format> values) {
        if (formatBuilder_ == null) {
          ensureFormatIsMutable();
          super.addAll(values, format_);
          onChanged();
        } else {
          formatBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFormat() {
        if (formatBuilder_ == null) {
          format_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          formatBuilder_.clear();
        }
        return this;
      }
      public Builder removeFormat(int index) {
        if (formatBuilder_ == null) {
          ensureFormatIsMutable();
          format_.remove(index);
          onChanged();
        } else {
          formatBuilder_.remove(index);
        }
        return this;
      }
      public hebe.Hebe.Format.Builder getFormatBuilder(
          int index) {
        return getFormatFieldBuilder().getBuilder(index);
      }
      public hebe.Hebe.FormatOrBuilder getFormatOrBuilder(
          int index) {
        if (formatBuilder_ == null) {
          return format_.get(index);  } else {
          return formatBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends hebe.Hebe.FormatOrBuilder> 
           getFormatOrBuilderList() {
        if (formatBuilder_ != null) {
          return formatBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(format_);
        }
      }
      public hebe.Hebe.Format.Builder addFormatBuilder() {
        return getFormatFieldBuilder().addBuilder(
            hebe.Hebe.Format.getDefaultInstance());
      }
      public hebe.Hebe.Format.Builder addFormatBuilder(
          int index) {
        return getFormatFieldBuilder().addBuilder(
            index, hebe.Hebe.Format.getDefaultInstance());
      }
      public java.util.List<hebe.Hebe.Format.Builder> 
           getFormatBuilderList() {
        return getFormatFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hebe.Hebe.Format, hebe.Hebe.Format.Builder, hebe.Hebe.FormatOrBuilder> 
          getFormatFieldBuilder() {
        if (formatBuilder_ == null) {
          formatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hebe.Hebe.Format, hebe.Hebe.Format.Builder, hebe.Hebe.FormatOrBuilder>(
                  format_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          format_ = null;
        }
        return formatBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:hebe.Settings)
    }
    
    static {
      defaultInstance = new Settings(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:hebe.Settings)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hebe_DataPartial_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hebe_DataPartial_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hebe_Shrink_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hebe_Shrink_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hebe_Noise_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hebe_Noise_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hebe_Transform_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hebe_Transform_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hebe_Intersect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hebe_Intersect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hebe_Format_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hebe_Format_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hebe_Filter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hebe_Filter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_hebe_Settings_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hebe_Settings_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020proto/hebe.proto\022\004hebe\"\222\001\n\013DataPartial" +
      "\022\022\n\004name\030\001 \002(\t:\004null\022 \n\007columns\030\002 \002(\t:\017p" +
      "vid,deliver_id\022\036\n\005joint\030\003 \001(\t:\017pvid,deli" +
      "ver_id\022\023\n\tjoin_type\030\004 \001(\t:\000\022\030\n\016default_v" +
      "alues\030\005 \001(\t:\000\"*\n\006Shrink\022\022\n\004name\030\001 \002(\t:\004n" +
      "ull\022\014\n\004args\030\002 \001(\t\"C\n\005Noise\022\017\n\007columns\030\001 " +
      "\002(\t\022\n\n\002to\030\002 \002(\t\022\r\n\005value\030\003 \002(\t\022\016\n\006factor" +
      "\030\004 \002(\t\"`\n\tTransform\022\022\n\004type\030\001 \002(\t:\004null\022" +
      "\014\n\004args\030\002 \001(\t\022\017\n\007columns\030\003 \002(\t\022\n\n\002to\030\004 \002" +
      "(\t\022\024\n\005label\030\005 \001(\t:\005click\"l\n\tIntersect\022\017\n",
      "\007columns\030\001 \002(\t\022\022\n\nfix_bundle\030\002 \001(\t\022\021\n\006fa" +
      "ctor\030\003 \001(\005:\0012\022\021\n\007mapfile\030\004 \001(\t:\000\022\024\n\005labe" +
      "l\030\005 \001(\t:\005click\"\234\001\n\006Format\022\020\n\004name\030\001 \002(\t:" +
      "\002vw\022\017\n\007pattern\030\002 \002(\t\022\017\n\007columns\030\003 \002(\t\022\027\n" +
      "\nnumreduces\030\004 \001(\005:\003200\022\030\n\rvalidate_rate\030" +
      "\005 \001(\005:\0010\022\025\n\rrandom_column\030\006 \001(\t\022\024\n\014rando" +
      "m_ratio\030\007 \001(\t\"o\n\006Filter\022\022\n\004name\030\001 \002(\t:\004n" +
      "ull\022\014\n\004args\030\002 \001(\t\022\016\n\006inputs\030\003 \002(\t\022\017\n\007out" +
      "puts\030\004 \002(\t\022\022\n\noutput_num\030\005 \001(\005\022\016\n\006offset" +
      "\030\006 \001(\005\"\352\001\n\010Settings\022\014\n\004name\030\001 \002(\t\022\022\n\nwho",
      "le_data\030\002 \002(\t\022\"\n\007partial\030\003 \003(\0132\021.hebe.Da" +
      "taPartial\022\034\n\006shrink\030\004 \003(\0132\014.hebe.Shrink\022" +
      "\032\n\005noise\030\005 \003(\0132\013.hebe.Noise\022\"\n\ttransform" +
      "\030\006 \003(\0132\017.hebe.Transform\022\034\n\006filter\030\007 \003(\0132" +
      "\014.hebe.Filter\022\034\n\006format\030\010 \003(\0132\014.hebe.For" +
      "mat"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_hebe_DataPartial_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_hebe_DataPartial_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hebe_DataPartial_descriptor,
              new java.lang.String[] { "Name", "Columns", "Joint", "JoinType", "DefaultValues", },
              hebe.Hebe.DataPartial.class,
              hebe.Hebe.DataPartial.Builder.class);
          internal_static_hebe_Shrink_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_hebe_Shrink_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hebe_Shrink_descriptor,
              new java.lang.String[] { "Name", "Args", },
              hebe.Hebe.Shrink.class,
              hebe.Hebe.Shrink.Builder.class);
          internal_static_hebe_Noise_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_hebe_Noise_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hebe_Noise_descriptor,
              new java.lang.String[] { "Columns", "To", "Value", "Factor", },
              hebe.Hebe.Noise.class,
              hebe.Hebe.Noise.Builder.class);
          internal_static_hebe_Transform_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_hebe_Transform_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hebe_Transform_descriptor,
              new java.lang.String[] { "Type", "Args", "Columns", "To", "Label", },
              hebe.Hebe.Transform.class,
              hebe.Hebe.Transform.Builder.class);
          internal_static_hebe_Intersect_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_hebe_Intersect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hebe_Intersect_descriptor,
              new java.lang.String[] { "Columns", "FixBundle", "Factor", "Mapfile", "Label", },
              hebe.Hebe.Intersect.class,
              hebe.Hebe.Intersect.Builder.class);
          internal_static_hebe_Format_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_hebe_Format_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hebe_Format_descriptor,
              new java.lang.String[] { "Name", "Pattern", "Columns", "Numreduces", "ValidateRate", "RandomColumn", "RandomRatio", },
              hebe.Hebe.Format.class,
              hebe.Hebe.Format.Builder.class);
          internal_static_hebe_Filter_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_hebe_Filter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hebe_Filter_descriptor,
              new java.lang.String[] { "Name", "Args", "Inputs", "Outputs", "OutputNum", "Offset", },
              hebe.Hebe.Filter.class,
              hebe.Hebe.Filter.Builder.class);
          internal_static_hebe_Settings_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_hebe_Settings_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_hebe_Settings_descriptor,
              new java.lang.String[] { "Name", "WholeData", "Partial", "Shrink", "Noise", "Transform", "Filter", "Format", },
              hebe.Hebe.Settings.class,
              hebe.Hebe.Settings.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
